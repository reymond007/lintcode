/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */
public class Solution {
    /**
     * @param root: The root of the binary search tree.
     * @param k1 and k2: range k1 to k2.
     * @return: Return all keys that k1<=key<=k2 in ascending order.
     */
     
    public int pre = Integer.MIN_VALUE;
    public boolean firstNode = true;
    
    public ArrayList<Integer> searchRange(TreeNode root, int k1, int k2) {
        // write your code here
        
        ArrayList<Integer> results = new ArrayList<Integer>();
        if(root == null)
        {
            return results;
        }
        
        helper(results, root, k1, k2);
        return results;
    }
    
    public void helper(ArrayList<Integer> results, TreeNode node, int k1, int k2)
    {
        if(node == null)
        {
            return;
        }
        
        helper(results, node.left, k1, k2);
        if(node.val>= k1 && node.val <= k2)
        {
            results.add(node.val);
        }
        if(node.val > k2)
        {
            return;
        }
        
        helper(results, node.right, k1, k2);
    }
}
