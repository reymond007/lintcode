public class Solution {
    /**
     * @param word1 & word2: Two string.
     * @return: The minimum number of steps.
     */
    public int minDistance(String word1, String word2) {
        // write your code here
        
        if(word1 == null && word2 == null)
        {
            return 0;
        }
        if(word1 == null)
        {
            return word2.length();
        }
        if(word2 == null)
        {
            return word1.length();
        }
        
        int[][]dp = new int [word1.length()+1][word2.length()+1];
        dp[0][0] = 0;
        
        for(int i = 1; i < dp[0].length; i++)
        {
            dp[0][i] = i;
        }
        for(int i = 1; i < dp.length; i++)
        {
            dp[i][0] = i;
        }
        
        for(int i = 1; i < dp.length; i++)
        {
            for(int j = 1; j < dp[0].length; j++)
            {
                if(word1.charAt(i-1) == word2.charAt(j-1))
                {
                    dp[i][j] = dp[i-1][j-1];
                }
                else
                {
                    int min = Math.min(Math.min(dp[i-1][j],dp[i-1][j-1]),dp[i][j-1]);
                    dp[i][j] = min+1;
                }
            }
        }
        
        return dp[dp.length-1][dp[0].length-1];
    }
}
